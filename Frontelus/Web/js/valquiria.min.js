document.createElement("section");
document.createElement("article");

//Show header on scroll up
function NavScroll() {
    var didScroll;
    var lastScrollTop = 0;
    var delta = 5;
    var navbar = $('header.navScroll');
    var navbarHeight = navbar.outerHeight();

    $(window).scroll(function (event) {
        didScroll = true;
    });

    setInterval(function () {
        if (didScroll) {
            hasScrolled(navbar);
            didScroll = false;
        }
    }, 250);

    function hasScrolled(navbar) {
        var st = $(this).scrollTop();

        if (Math.abs(lastScrollTop - st) <= delta)
            return;

        if (st > lastScrollTop && st > navbarHeight) {
            // Scroll Down
            navbar.removeClass('nav-down').addClass('nav-up');
        } else {
            // Scroll Up
            if (st + $(window).height() < $(document).height()) {
                navbar.removeClass('nav-up').addClass('nav-down');
            }
        }

        lastScrollTop = st;
    }
}

//Hide header on scroll down
function NavScrollDown() {
    var nav = $("header.scroll-hide");
    $(document).on("scroll", function () {
        if ($(document).scrollTop() > 100) {
            nav.addClass("down");
        } else {
            nav.removeClass("down");
        }
    });
}

// Navigation
$(function () {
    $('*').click(function () {
        $("*.openmenu").removeClass("openmenu");
    });
    $('nav.navigation > ul > li.dropdown > a').click(function (e) {
        var $this = $(this);
        $this.parent().toggleClass('openmenu');
        e.stopPropagation();
    });
    $('nav.navigation > ul.hover > li.dropdown > a').click(function (e) {
        $(this).parent().removeClass('openmenu');
        e.stopPropagation();
    });
    $('nav.navigation.vertical > ul > li.dropdown > a').each(function () {
        var $this = $(this);
        var $width = $this.parent().data('width');
        if ($width) {
            $this.next().css({
                width: $width
            });
        }
    });
    //Responsive
    $('nav.navigation.vertical').click(function (e) {
        if ($(window).width() <= 1000) {
            var $this = $(this);
            $this.toggleClass('openmenu-resp');
        }
        e.stopPropagation();
    });
    $('html,body,ul li a').click(function () {
        if (!$(this).parent().hasClass('dropdown')) {
            $("*.openmenu-resp").removeClass("openmenu-resp");
        }
    });
});

// Modal
/* ========================================================================
 * Bootstrap: modal.js v3.3.2
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
    'use strict';

    // MODAL CLASS DEFINITION
    // ======================

    var Modal = function (element, options) {
        this.options = options;
        this.$body = $(document.body);
        this.$element = $(element);
        this.$backdrop =
                this.isShown = null;
        this.scrollbarWidth = 0;

        if (this.options.remote) {
            this.$element
                    .find('.modal-content')
                    .load(this.options.remote, $.proxy(function () {
                        this.$element.trigger('loaded.bs.modal');
                    }, this));
        }
    };

    Modal.VERSION = '3.3.2';

    Modal.TRANSITION_DURATION = 300;
    Modal.BACKDROP_TRANSITION_DURATION = 150;

    Modal.DEFAULTS = {
        backdrop: true,
        keyboard: true,
        show: true
    };

    Modal.prototype.toggle = function (_relatedTarget) {
        return this.isShown ? this.hide() : this.show(_relatedTarget);
    };

    Modal.prototype.show = function (_relatedTarget) {
        var that = this;
        var e = $.Event('show.bs.modal', {relatedTarget: _relatedTarget});

        this.$element.trigger(e);

        if (this.isShown || e.isDefaultPrevented())
            return;

        this.isShown = true;

        this.checkScrollbar();
        this.setScrollbar();
        this.$body.addClass('modal-open');

        this.escape();
        this.resize();

        this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this));

        this.backdrop(function () {
            var transition = $.support.transition && that.$element.hasClass('fade');

            if (!that.$element.parent().length) {
                that.$element.appendTo(that.$body); // don't move modals dom position
            }

            that.$element
                    .show()
                    .scrollTop(0);

            if (that.options.backdrop)
                that.adjustBackdrop();
            that.adjustDialog();

            if (transition) {
                that.$element[0].offsetWidth; // force reflow
            }

            that.$element
                    .addClass('in')
                    .attr('aria-hidden', false);

            that.enforceFocus();

            var e = $.Event('shown.bs.modal', {relatedTarget: _relatedTarget});

            transition ?
                    that.$element.find('.modal-dialog') // wait for modal to slide in
                    .one('bsTransitionEnd', function () {
                        that.$element.trigger('focus').trigger(e);
                    })
                    .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
                    that.$element.trigger('focus').trigger(e);
        });
    };

    Modal.prototype.hide = function (e) {
        if (e)
            e.preventDefault();

        e = $.Event('hide.bs.modal');

        this.$element.trigger(e);

        if (!this.isShown || e.isDefaultPrevented())
            return;

        this.isShown = false;

        this.escape();
        this.resize();

        $(document).off('focusin.bs.modal');

        this.$element
                .removeClass('in')
                .attr('aria-hidden', true)
                .off('click.dismiss.bs.modal');

        $.support.transition && this.$element.hasClass('fade') ?
                this.$element
                .one('bsTransitionEnd', $.proxy(this.hideModal, this))
                .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
                this.hideModal();
    };

    Modal.prototype.enforceFocus = function () {
        $(document)
                .off('focusin.bs.modal') // guard against infinite focus loop
                .on('focusin.bs.modal', $.proxy(function (e) {
                    if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
                        this.$element.trigger('focus');
                    }
                }, this));
    };

    Modal.prototype.escape = function () {
        if (this.isShown && this.options.keyboard) {
            this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
                e.which === 27 && this.hide();
            }, this));
        } else if (!this.isShown) {
            this.$element.off('keydown.dismiss.bs.modal');
        }
    };

    Modal.prototype.resize = function () {
        if (this.isShown) {
            $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this));
        } else {
            $(window).off('resize.bs.modal');
        }
    };

    Modal.prototype.hideModal = function () {
        var that = this;
        this.$element.hide();
        this.backdrop(function () {
            that.$body.removeClass('modal-open');
            that.resetAdjustments();
            that.resetScrollbar();
            that.$element.trigger('hidden.bs.modal');
        });
    };

    Modal.prototype.removeBackdrop = function () {
        this.$backdrop && this.$backdrop.remove();
        this.$backdrop = null;
    };

    Modal.prototype.backdrop = function (callback) {
        var that = this;
        var animate = this.$element.hasClass('fade') ? 'fade' : '';

        if (this.isShown && this.options.backdrop) {
            var doAnimate = $.support.transition && animate;

            this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />')
                    .prependTo(this.$element)
                    .on('click.dismiss.bs.modal', $.proxy(function (e) {
                        if (e.target !== e.currentTarget)
                            return;
                        this.options.backdrop === 'static'
                                ? this.$element[0].focus.call(this.$element[0])
                                : this.hide.call(this);
                    }, this));

            if (doAnimate)
                this.$backdrop[0].offsetWidth; // force reflow

            this.$backdrop.addClass('in');

            if (!callback)
                return;

            doAnimate ?
                    this.$backdrop
                    .one('bsTransitionEnd', callback)
                    .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
                    callback();

        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass('in');

            var callbackRemove = function () {
                that.removeBackdrop();
                callback && callback();
            };
            $.support.transition && this.$element.hasClass('fade') ?
                    this.$backdrop
                    .one('bsTransitionEnd', callbackRemove)
                    .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
                    callbackRemove();

        } else if (callback) {
            callback();
        }
    };

    // these following methods are used to handle overflowing modals

    Modal.prototype.handleUpdate = function () {
        if (this.options.backdrop)
            this.adjustBackdrop();
        this.adjustDialog();
    };

    Modal.prototype.adjustBackdrop = function () {
        this.$backdrop
                .css('height', 0)
                .css('height', this.$element[0].scrollHeight);
    };

    Modal.prototype.adjustDialog = function () {
        var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight;

        this.$element.css({
            paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
            paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
        });
    };

    Modal.prototype.resetAdjustments = function () {
        this.$element.css({
            paddingLeft: '',
            paddingRight: ''
        });
    };

    Modal.prototype.checkScrollbar = function () {
        this.bodyIsOverflowing = document.body.scrollHeight > document.documentElement.clientHeight;
        this.scrollbarWidth = this.measureScrollbar();
    };

    Modal.prototype.setScrollbar = function () {
        var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10);
        if (this.bodyIsOverflowing)
            this.$body.css('padding-right', bodyPad + this.scrollbarWidth);
    };

    Modal.prototype.resetScrollbar = function () {
        this.$body.css('padding-right', '');
    };

    Modal.prototype.measureScrollbar = function () { // thx walsh
        var scrollDiv = document.createElement('div');
        scrollDiv.className = 'modal-scrollbar-measure';
        this.$body.append(scrollDiv);
        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        this.$body[0].removeChild(scrollDiv);
        return scrollbarWidth;
    };


    // MODAL PLUGIN DEFINITION
    // =======================

    function Plugin(option, _relatedTarget) {
        return this.each(function () {
            var $this = $(this);
            var data = $this.data('bs.modal');
            var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option === 'object' && option);

            if (!data)
                $this.data('bs.modal', (data = new Modal(this, options)));
            if (typeof option === 'string')
                data[option](_relatedTarget);
            else if (options.show)
                data.show(_relatedTarget);
        });
    }

    var old = $.fn.modal;

    $.fn.modal = Plugin;
    $.fn.modal.Constructor = Modal;


    // MODAL NO CONFLICT
    // =================

    $.fn.modal.noConflict = function () {
        $.fn.modal = old;
        return this;
    };


    // MODAL DATA-API
    // ==============

    $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
        var $this = $(this);
        var href = $this.attr('href');
        var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))); // strip for ie7
        var option = $target.data('bs.modal') ? 'toggle' : $.extend({remote: !/#/.test(href) && href}, $target.data(), $this.data());

        if ($this.is('a'))
            e.preventDefault();

        $target.one('show.bs.modal', function (showEvent) {
            if (showEvent.isDefaultPrevented())
                return; // only register focus restorer if modal will actually get shown
            $target.one('hidden.bs.modal', function () {
                $this.is(':visible') && $this.trigger('focus');
            });
        });
        Plugin.call($target, option, this);
    });

}(jQuery);


//Parallax
$(function () {
    $pantalla = $(window);
    $('.parallax').each(function () {
        var $this = $(this);
        $this.css({
            'background-repeat': 'no-repeat',
            'background-position': '50% 0',
            'background-attachment': 'fixed'
        });
        $pantalla.scroll(function () {
            var y = -($pantalla.scrollTop() / 5);
            var xy = '50% ' + y + 'px';
            $this.css({backgroundPosition: xy});
        });
    });
    $('.imageParallax img').each(function () {
        var $this = $(this);
        $pantalla.scroll(function () {
            var y = -(($pantalla.scrollTop() / 10) + parseInt(10));
            $this.css({top: y + '%'});
        });
    });
});

//Back to top
$(function () {
    $("#back-to-top").hide();
    $(function () {
        $(window).scroll(function () {
            if ($(this).scrollTop() > 100) {
                $('#back-to-top').fadeIn();
            } else {
                $('#back-to-top').fadeOut();
            }
        });

        $('#back-to-top').click(function () {
            $('body,html').animate({
                scrollTop: 0
            }, 800);
            return false;
        });
    });
});

//Put Position z-index
$(function () {
    $('*[data-position="relative"],*[data-position="absolute"],*[data-position="fixed"]').each(function () {
        $(this).css({
            'position': $(this).data('position'),
            'z-index': $(this).data('level')
        });
    });
});

//Animations
$(function () {
    function a(c, b) {
        c.each(function () {
            var g = $(this), h = g.attr("data-animate"), f = g.attr("data-os-animation-delay");
            g.css({"-webkit-animation-delay": f, "-moz-animation-delay": f, "animation-delay": f});
            var d = b ? b : g;
            d.waypoint(function () {
                g.addClass("animated").addClass(h);
            }, {triggerOnce: true, offset: "90%"});
        });
    }
    $(".anim-bounce").addClass("os-animation").attr({"data-animate": "bounce"});
    $(".anim-flash").addClass("os-animation").attr({"data-animate": "flash"});
    $(".anim-pulse").addClass("os-animation").attr({"data-animate": "pulse"});
    $(".anim-rubberBand").addClass("os-animation").attr({"data-animate": "rubberBand"});
    $(".anim-shake").addClass("os-animation").attr({"data-animate": "shake"});
    $(".anim-swing").addClass("os-animation").attr({"data-animate": "swing"});
    $(".anim-tada").addClass("os-animation").attr({"data-animate": "tada"});
    $(".anim-wobble").addClass("os-animation").attr({"data-animate": "wobble"});
    $(".anim-bounceIn").addClass("os-animation").attr({"data-animate": "bounceIn"});
    $(".anim-bounceInDown").addClass("os-animation").attr({"data-animate": "bounceInDown"});
    $(".anim-bounceInLeft").addClass("os-animation").attr({"data-animate": "bounceInLeft"});
    $(".anim-bounceInRight").addClass("os-animation").attr({"data-animate": "bounceInRight"});
    $(".anim-bounceInUp").addClass("os-animation").attr({"data-animate": "bounceInUp"});
    $(".anim-bounceOut").addClass("os-animation").attr({"data-animate": "bounceOut"});
    $(".anim-bounceOutDown").addClass("os-animation").attr({"data-animate": "bounceOutDown"});
    $(".anim-bounceOutLeft").addClass("os-animation").attr({"data-animate": "bounceOutLeft"});
    $(".anim-bounceOutRight").addClass("os-animation").attr({"data-animate": "bounceOutRight"});
    $(".anim-bounceOutUp").addClass("os-animation").attr({"data-animate": "bounceOutUp"});
    $(".anim-fadeIn").addClass("os-animation").attr({"data-animate": "fadeIn"});
    $(".anim-fadeInDown").addClass("os-animation").attr({"data-animate": "fadeInDown"});
    $(".anim-fadeInDownBig").addClass("os-animation").attr({"data-animate": "fadeInDownBig"});
    $(".anim-fadeInLeft").addClass("os-animation").attr({"data-animate": "fadeInLeft"});
    $(".anim-fadeInLeftBig").addClass("os-animation").attr({"data-animate": "fadeInLeftBig"});
    $(".anim-fadeInRight").addClass("os-animation").attr({"data-animate": "fadeInRight"});
    $(".anim-fadeInRightBig").addClass("os-animation").attr({"data-animate": "fadeInRightBig"});
    $(".anim-fadeInUp").addClass("os-animation").attr({"data-animate": "fadeInUp"});
    $(".anim-fadeInUpBig").addClass("os-animation").attr({"data-animate": "fadeInUpBig"});
    $(".anim-fadeOut").addClass("os-animation").attr({"data-animate": "fadeOut"});
    $(".anim-fadeOutDown").addClass("os-animation").attr({"data-animate": "fadeOutDown"});
    $(".anim-fadeOutDownBig").addClass("os-animation").attr({"data-animate": "fadeOutDownBig"});
    $(".anim-fadeOutLeft").addClass("os-animation").attr({"data-animate": "fadeOutLeft"});
    $(".anim-fadeOutLeftBig").addClass("os-animation").attr({"data-animate": "fadeOutLeftBig"});
    $(".anim-fadeOutRight").addClass("os-animation").attr({"data-animate": "fadeOutRight"});
    $(".anim-fadeOutRightBig").addClass("os-animation").attr({"data-animate": "fadeOutRightBig"});
    $(".anim-fadeOutUp").addClass("os-animation").attr({"data-animate": "fadeOutUp"});
    $(".anim-fadeOutUpBig").addClass("os-animation").attr({"data-animate": "fadeOutUpBig"});
    $(".anim-flipInX").addClass("os-animation").attr({"data-animate": "flipInX"});
    $(".anim-flipInY").addClass("os-animation").attr({"data-animate": "flipInY"});
    $(".anim-flipOutX").addClass("os-animation").attr({"data-animate": "flipOutX"});
    $(".anim-flipOutY").addClass("os-animation").attr({"data-animate": "flipOutY"});
    $(".anim-lightSpeedIn").addClass("os-animation").attr({"data-animate": "lightSpeedIn"});
    $(".anim-lightSpeedOut").addClass("os-animation").attr({"data-animate": "lightSpeedOut"});
    $(".anim-rotateIn").addClass("os-animation").attr({"data-animate": "rotateIn"});
    $(".anim-rotateInDownLeft").addClass("os-animation").attr({"data-animate": "rotateInDownLeft"});
    $(".anim-rotateInDownRight").addClass("os-animation").attr({"data-animate": "rotateInDownRight"});
    $(".anim-rotateInUpLeft").addClass("os-animation").attr({"data-animate": "rotateInUpLeft"});
    $(".anim-rotateInUpRight").addClass("os-animation").attr({"data-animate": "rotateInUpRight"});
    $(".anim-rotateOut").addClass("os-animation").attr({"data-animate": "rotateOut"});
    $(".anim-rotateOutDownLeft").addClass("os-animation").attr({"data-animate": "rotateOutDownLeft"});
    $(".anim-rotateOutDownRight").addClass("os-animation").attr({"data-animate": "rotateOutDownRight"});
    $(".anim-rotateOutUpLeft").addClass("os-animation").attr({"data-animate": "rotateOutUpLeft"});
    $(".anim-rotateOutUpRight").addClass("os-animation").attr({"data-animate": "rotateOutUpRight"});
    $(".anim-hinge").addClass("os-animation").attr({"data-animate": "hinge"});
    $(".anim-rollIn").addClass("os-animation").attr({"data-animate": "rollIn"});
    $(".anim-rollOut").addClass("os-animation").attr({"data-animate": "rollOut"});
    $(".anim-zoomIn").addClass("os-animation").attr({"data-animate": "zoomIn"});
    $(".anim-zoomInDown").addClass("os-animation").attr({"data-animate": "zoomInDown"});
    $(".anim-zoomInLeft").addClass("os-animation").attr({"data-animate": "zoomInLeft"});
    $(".anim-zoomInRight").addClass("os-animation").attr({"data-animate": "zoomInRight"});
    $(".anim-zoomInUp").addClass("os-animation").attr({"data-animate": "zoomInUp"});
    $(".anim-zoomOut").addClass("os-animation").attr({"data-animate": "zoomOut"});
    $(".anim-zoomOutDown").addClass("os-animation").attr({"data-animate": "zoomOutDown"});
    $(".anim-zoomOutLeft").addClass("os-animation").attr({"data-animate": "zoomOutLeft"});
    $(".anim-zoomOutRight").addClass("os-animation").attr({"data-animate": "zoomOutRight"});
    $(".anim-zoomOutUp").addClass("os-animation").attr({"data-animate": "zoomOutUp"});
    $(".anim-slideInDown").addClass("os-animation").attr({"data-animate": "slideInDown"});
    $(".anim-slideInLeft").addClass("os-animation").attr({"data-animate": "slideInLeft"});
    $(".anim-slideInRight").addClass("os-animation").attr({"data-animate": "slideInRight"});
    $(".anim-slideInUp").addClass("os-animation").attr({"data-animate": "slideInUp"});
    $(".anim-slideOutDown").addClass("os-animation").attr({"data-animate": "slideOutDown"});
    $(".anim-slideOutLeft").addClass("os-animation").attr({"data-animate": "slideOutLeft"});
    $(".anim-slideOutRight").addClass("os-animation").attr({"data-animate": "slideOutRight"});
    $(".anim-slideOutUp").addClass("os-animation").attr({"data-animate": "slideOutUp"});
    a($(".os-animation"));
    a($(".staggered-animation"), $(".staggered-animation-container"));
});

//Smooth Scroll
$(function () {
    $("a[href*=#]:not([href=#])").click(function () {
        if (location.pathname.replace(/^\//, "") === this.pathname.replace(/^\//, "") && location.hostname === this.hostname) {
            var a = $(this.hash);
            a = a.length ? a : $("[name=" + this.hash.slice(1) + "]");
            if (a.length) {
                $("html,body").animate({scrollTop: a.offset().top}, 1000);
                return false;
            }
        }
    });
});

//Put Image
$(function () {
    $('*').each(function () {
        var $this = $(this);
        var $image = $this.data('image');
        if ($image) {
            $this.css({
                'background-image': 'url("' + $image + '")'
            });
        }
    });
});

//Data GoTo
$(function () {
    $('*').each(function () {
        var $this = $(this);
        var $goto = $this.data('goto');
        $this.click(function () {
            if ($goto) {
                if ($this.data('target')) {
                    window.open($goto, $this.data('target'));
                } else {
                    window.open($goto, "_self");
                }
            }
        });
    });
});

//Input Check Empty
function CheckInputEmpty(Name, NameClass) {
    var Data = $('input[name="' + Name + '"]');

    if (!NameClass) {
        NameClass = 'errorInput';
    }

    if (!Data.val()) {
        $(Data).addClass(NameClass);
    } else {
        $(Data).removeClass(NameClass);
    }
}

//Input Only Numbers
function CheckInputNumbers(Name) {
    var Data = $('input[name="' + Name + '"]');
    Data.keydown(function (e) {
        if ((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105) && e.keyCode != 8 && e.keyCode != 9)
            e.preventDefault();
    });
}

//Check Input Email
function CheckInputEmail(Name, NameClass) {
    var filter = /[\w-\.]{3,}@([\w-]{2,}\.)*([\w-]{2,}\.)[\w-]{2,4}/;
    var Data = $('input[name="' + Name + '"]');

    if (filter.test(Data.val().trim())) {
        Data.removeAttr('style');
    } else {
        Data.css('background-color', '#FFEAEA');
    }
}

//Change Inputs
function ChangeInputs(Name) {
    var Data = $('input[name="' + Name + '"]');
    Data.val('');
}